plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'maven-publish'
}

version = "$mc_version-$mod_version"
group = 'ch.nilsh'

base {
    archivesName = project.name
}

//apply from: 'https://raw.githubusercontent.com/nilshindermann/Common/main/common.gradle'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }

    withSourcesJar()
    withJavadocJar()
}


application {
    mainClass = 'ch.nilsh.Main'
}

jar {
    manifest {
        attributes([
                'Main-Class'              : application.mainClass,
                "Specification-Title"     : project.name,
                "Specification-Vendor"    : "Nils Hindermann",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : jar.archiveVersion,
                "Implementation-Vendor"   : "Nils Hindermann",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Java-Version'            : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : mc_version
        ])
    }
}

repositories {
    mavenLocal()
}

dependencies {
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://$projectDir/repo"
        }
    }
}

tasks.register('printVersion') {
    doLast {
        println "version=$version"
    }
}

// changelog experiment
//String s = changelog('changelog.txt')
//System.out.println(s)
//System.out.println(secret('nexus_uname'))